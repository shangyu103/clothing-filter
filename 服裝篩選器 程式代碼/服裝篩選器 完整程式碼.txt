main.cpp

#include<iostream>
#include<iomanip>
#include"boysize.h"
#include"boyType.h"
#include"Girl.h"

using namespace std;


void clothing(int t) {


	cin >> t;

	if (t == 1 || t == 2) {

		Type T(t);


	}

	else if (t != 1 && t != 2) {

		cout << "請輸入正確服裝類型!" << endl;

		clothing(t);

	}

}


void gender(int n) {

	double s1, c1, w1, h1, he1, s2, c2, w2, h2, he2;

	//cin >> n;


	if (n != 1 && n != 2) {

		cout << "請輸入正確性別" << endl;

		gender(n);

	}

	else if (n == 1) {

		cout << "請輸入肩寬" << endl;

		cin >> s1;

		cout << "請輸入胸圍" << endl;

		cin >> c1;

		cout << "請輸入腰圍" << endl;

		cin >> w1;

		cout << "請輸入臀圍" << endl;

		cin >> h1;

		cout << "請輸入身高" << endl;

		cin >> he1;

		Boy B(s1, c1, w1, h1, he1);

		B.sizeCalculation();

	}

	else {

		cout << "請輸入肩寬" << endl;

		cin >> s2;

		cout << "請輸入胸圍" << endl;

		cin >> c2;

		cout << "請輸入腰圍" << endl;

		cin >> w2;

		cout << "請輸入臀圍" << endl;

		cin >> h2;

		cout << "請輸入身高" << endl;

		cin >> he2;


	}


}


int main() {

	cout << "請輸入你的性別!" << endl;

	cout << "如果你是男性，請輸入1" << endl << "如果你是女性，請輸入2" << endl; int sex; cin >> sex;
	if (sex == 2) {

		cout << "依序輸入->胸圍->腰圍->臀圍" << endl;
		double c, w, h; cin >> c >> w >> h;
		Girl P1(c, w, h);
		int body = P1.getBody(c, w, h);
		P1.setBody(body);
		cout << "以下是關於身型的建議" << endl << endl;
		P1.setStyle(body);
		cout << "接著輸入身高給予建議的尺寸" << endl;
		double height; cin >> height;
		P1.setSize(height);
		cout << endl << " 謝謝使用" << endl;
	}
	else if (sex == 1) {
		int t = 0;

		int s = 1;


		cout << "請輸入你想篩選的服裝類型!" << endl << "如果你想篩選衣服，請輸入1" << endl << "如果你想篩選褲子，請輸入2" << endl;

		clothing(t);
		gender(sex);
	}
	else cout << "無法判斷性別" << endl;


}

Girl.h

#ifndef  GIRL_H
#define GIRL_H
#include<string>
class Girl {
private:
    double shouIder;
    double chest;
    double waist;
    double hip;
    double back;
    double height;
    int body;

public:
    Girl(double, double, double);
    Girl(double, double, double, double, double);
    int getBody(double, double, double);
    void setBody(int);
    void  setStyle(int);
    void  setSize(double);

};
#endif


Girl.cpp
#include "Girl.h"
#include<iostream>
#include<string>
using namespace std;
Girl::Girl(double chest, double waist, double hip) {
    (*this).chest = chest;
    (*this).waist = waist;
    (*this).hip = hip;
}
Girl::Girl(double shouIder, double chest, double waist, double hip, double back) {
    this->shouIder = shouIder;
    this->chest = chest;
    this->waist = waist;
    this->hip = hip;
    this->back = back;
}
int Girl::getBody(double chest, double waist, double hip) {
    if (waist / hip < 0.65 && waist / chest>0.9)return 1;//pear梨形
    else if (waist / hip > 0.75 && waist / hip < 0.9 && waist / chest>0.75 && waist / chest < 0.9)return 2;//H
    else if (waist / hip > 0.65 && waist / hip < 0.75 && waist / chest>0.65 && waist / chest < 0.75)return 3; //hourglass沙漏
    else if (waist / chest > 0.65 && waist / chest < 0.75 && hip < waist)return 4;//triangle
    else if (waist / hip > 0.9 && waist / chest > 0.9)return 5;//apple
    else return 6;
}
void Girl::setBody(int body) {
    switch (body)
    {
    case 1:cout << "pear身型為梨型" << endl;
        cout << "   ***   " << endl;
        cout << "  ***** " << endl;
        cout << "   ***   " << endl;
        cout << "  *****  " << endl;
        cout << " ******* " << endl;
        cout << " ******* " << endl;
        cout << " ******* " << endl;
        cout << "  *****  " << endl;
        cout << "   ***   " << endl;
        break;
    case 2:cout << "身型為H型" << endl << endl;
        for (int j = 0; j < 9; j++) {
            for (int i = 0; i < 9; i++) {
                if (j == 4)cout << "*";
            }if (j != 4)cout << "*       *"; cout << endl;
        }
        ; break;
    case 3:cout << "hourglass身型為沙漏型" << endl;
        for (int c = 0; c <= 4; c++) {
            for (int a = 1; a <= c; a++) {
                cout << " ";
            }
            for (int b = 1; b <= 9 - 2 * c; b++) {
                cout << "*";
            }cout << endl;
        }
        for (int c = 4; c >= 0; c--) {
            for (int a = 1; a <= c; a++) {
                cout << " ";
            }
            for (int b = 1; b <= 9 - 2 * c; b++) {
                cout << "*";
            }cout << endl;
        }
        break;
    case 4:cout << "triangle身型為倒三角身型" << endl;
        for (int c = 0; c <= 4; c++) {
            for (int a = 1; a <= c; a++) {
                cout << " ";
            }
            for (int b = 1; b <= 9 - 2 * c; b++) {
                cout << "*";
            }cout << endl;
        }
        break;
    case 5:cout << "apple身型為蘋果型" << endl;
        cout << "   ***   " << endl;
        cout << "  *****  " << endl;
        cout << " ******* " << endl;
        cout << " ******* " << endl;
        cout << " ******* " << endl;
        cout << " ******* " << endl;
        cout << " ******* " << endl;
        cout << "  *****  " << endl;
        cout << "   ***   " << endl;
        break;
    default:cout << "無法判定身型" << endl; break;
    }
}

void  Girl::setStyle(int body) {
    switch (body)
    {
    case 1:cout << "缺點 : 肩膀窄，腰細臀部有肉，褲子不好找。" << endl << "優點 : 身材曲線明顯，給人感覺較性感。" << endl
        << "適合款式 : 傘裙，A字版型裙子，寬鬆微挺西裝褲，喇叭褲。" << endl
        << "不適合款式 : 貼身長褲，花苞裙，不夠寬鬆太軟的牛仔褲。" << endl << endl; break;
    case 2:cout << "缺點 : 無腰線，身材部曲線不明顯，身材無份量。優點 : 穿衣雷點較少。" << endl
        << "適合款式 : 有墊肩的上衣、外套，收腰系列服裝，傘狀洋裝、喇叭褲。" << endl
        << "不適合款式 : 完全貼身的洋裝、長褲。" << endl << endl; break;
    case 3:cout << "缺點 : 胸部豐滿身材曲線明顯，容易過於性感或老成。" << endl
        << "優點 : 幾乎能夠駕馭所有款式，身材比例接近完美。" << endl
        << "不適合款式 : 直筒長洋裝" << endl << endl; break;
    case 4:cout << "缺點:肩膀較寬，容易顯壯。" << endl
        << "優點 : 很好撐起衣服不會顯得沒精神、腿部纖細。" << endl << endl
        << "適合款式 : A字版型裙子、短褲，花苞裙，寬褲，西裝外套，長洋裝，大領口上衣。" << endl
        << "不適合款式 :高領、削肩、泡泡袖。" << endl
        << "重點 : 把臀部凸顯出來讓臀部與肩同寬，弱化肩寬，整體看起來會非常修飾且顯瘦。" << endl << endl; break;
    case 5:cout << "缺點 : 胸腰臀豐滿，腰圍比臀為明顯，容易看起來臃腫。優點 : 四肢纖細，很好藏肉。" << endl
        << "適合款式 : 收腰款式，墊肩款式，藏肚子款式，喇叭褲。" << endl
        << "不適合款式 : 柔軟寬鬆露出腰的所有款式，直筒版型，貼身上衣。" << endl << endl; break;
    default:break;
    }
}
void Girl::setSize(double height) {
    if (height <= 157) {
        cout << endl << "建議尺寸為 XS" << endl;
    }
    else if (height > 157 && height < 163) {
        cout << endl << "建議尺寸為 S" << endl;
    }
    else if (height < 168 && height >= 163) {
        cout << endl << "建議尺寸為 M" << endl;
    }
    else if (height >= 168 && height < 173) {
        cout << endl << "建議尺寸為 L" << endl;
    }
    else if (height >= 173) {
        cout << endl << "建議尺寸為 XL" << endl;
    }
}

BoySize.h

#ifndef HI
#define HI
#include<iostream>
#include<iomanip>
using namespace std;
class Boy {
public:
	Boy();
	Boy(double, double, double, double, double);
	void setShoulderWider(double);
	double getShoulderWider();
	void setChestCircumference(double);
	double getChestCircumference();
	void setWalstline(double);
	double getWalstline();
	void setHipCircumference(double);
	double getHipCircumference();
	void setHeight(double);
	double getHeight();
	void sizeCalculation();
	void SML();
private:
	double shoulder;
	double chest;
	double walstline;
	double hip;
	double height;
};

#endif


BoySize.cpp


#include"boysize.h"
#include"boyType.h"
Boy::Boy() {
	shoulder = 1;
	chest = 1;
	walstline = 1;
	hip = 1;
	height = 1;
}
Boy::Boy(double newShoulder, double newChest, double newWalstline, double newHip, double newHeight) {
	shoulder = newShoulder;
	chest = newChest;
	walstline = newWalstline;
	hip = newHip;
	height = newHeight;
}
void Boy::setShoulderWider(double newShoulder) {
	shoulder = newShoulder;
}
double Boy::getShoulderWider() {
	return shoulder;
}
void Boy::setChestCircumference(double newChest) {
	chest = newChest;
}
double Boy::getChestCircumference() {
	return chest;
}
void Boy::setWalstline(double newWalstline) {
	walstline = newWalstline;
}
double Boy::getWalstline() {
	return walstline;
}
void Boy::setHipCircumference(double newHip) {
	hip = newHip;
}
double Boy::getHipCircumference() {
	return hip;
}
void Boy::setHeight(double newHeight) {
	height = newHeight;
}
double Boy::getHeight() {
	return height;
}
void Boy::sizeCalculation() {
	double n = 0;
	int a;
	int b = 0;
	n = walstline / hip * 1.0;
	if (n < 0.9) {
		cout << "你是倒梯形身材" << endl;
		a = 1;
	}
	if (n >= 0.9 && n <= 1.0) {
		cout << "你是矩形身材" << endl;
		a = 2;
	}
	if (n > 1.0) {
		cout << "你是橢圓形身材" << endl;
		a = 3;
	}
	b = a;

	SML();
	Type B;
	if (b == 1) {
		B.invertedTrapezoid();
	}
	if (b == 2) {
		B.rectangle();
	}
	if (b == 3) {
		B.oval();
	}

}
void Boy::SML() {
	int x = 0, y = 0, z = 0;
	int S = 1, M = 2, L = 3, XL = 4;
	if (getHeight() <= 168) {
		x = S;
	}
	if (getHeight() > 168 && getHeight() <= 175) {
		x = M;
	}
	if (getHeight() > 175 && getHeight() <= 181) {
		x = L;
	}
	if (getHeight() > 181) {
		x = XL;
	}
	if (getChestCircumference() <= 91) {
		y = S;
	}
	if (getChestCircumference() > 91 && getChestCircumference() <= 96) {
		y = M;
	}
	if (getChestCircumference() > 96 && getChestCircumference() <= 101) {
		y = L;
	}
	if (getChestCircumference() > 101) {
		y = XL;
	}
	if (getWalstline() <= 77) {
		z = S;
	}
	if (getWalstline() > 77 && getWalstline() <= 82) {
		z = M;
	}
	if (getWalstline() > 82 && getWalstline() <= 87) {
		z = L;
	}
	if (getWalstline() > 88) {
		z = XL;
	}
	int n = x;
	if (y > n) {
		n = y;
	}
	if (z > n) {
		n = z;
	}
	if (n == 1) {
		cout << "你的尺碼為:S" << endl;
	}
	else if (n == 2) {
		cout << "你的尺碼為:M" << endl;
	}
	else if (n == 3) {
		cout << "你的尺碼為:L" << endl;
	}
	else if (n == 4) {
		cout << "你的尺碼為:XL" << endl;
	}
}

BoyType.h

#ifndef GG
#define GG
#include<iostream>
#include<iomanip>
using namespace std;
class Type {
public:
	Type();
	Type(int);
	void setClothing(int);
	int getClothing();
	void invertedTrapezoid();
	void rectangle();
	void oval();
private:
	int clothing;
};
#endif

BoyType.cpp


#include"boyType.h"

Type::Type()
{
	clothing = 0;
}


Type::Type(int newClothing)
{
	clothing = newClothing;

}

void Type::setClothing(int newClothing)
{
	clothing = newClothing;
}

int Type::getClothing()
{
	return clothing;
}

void Type::invertedTrapezoid()
{
	if (clothing == 1) {
		cout << endl;
		cout << "合適款式: " << "緊身T恤、修身襯衫、單寧外套" << endl;
		cout << "款式建議: " << "避免寬鬆或蓬鬆的上衣，以免遮蓋身材特點";
	}
	else {
		cout << endl;
		cout << "合適款式: " << "直筒褲、修身褲、細身牛仔褲" << endl;
		cout << "款式建議: " << "避免寬鬆或寬腿的褲子，以免造成上下身比例不協調";
	}
}

void Type::rectangle()
{
	if (clothing == 1) {
		cout << endl;
		cout << "合適款式: " << "V領或開襯領、合身且不緊身的上衣" << endl;
		cout << "款式建議: " << "有結構感的袖子，以增加肩膀寬度，避免水平條紋的衣服，以免加強身材的直線感";
	}
	else {
		cout << endl;
		cout << "合適款式: " << "直筒褲、高腰褲、稍微寬鬆的牛彩褲" << endl;
		cout << "款式建議: " << "單色褲子可以使整體視覺更簡潔";
	}
}

void Type::oval()
{

	if (clothing == 1) {
		cout << endl;
		cout << "合適款式:" << "寬鬆棉質上衣、寬領T恤、牛仔襯衫" << endl;
		cout << "款式建議:" << "避免過度凸顯腹部，深色衣服可以營造視覺上的修飾效果，可搭配外套以拉長身材線條";
	}
	else {
		cout << endl;
		cout << "合適款式:" << "深色牛仔褲、豎腳運動褲、深色卡其褲" << endl;
		cout << "款式建議:" << "避免不高過膝蓋的短褲，褲子不能褶皺";
	}
}
